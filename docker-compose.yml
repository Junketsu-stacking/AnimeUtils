services:
  frontend:
    image: ${DOCKER_REGISTRY}/frontend:latest
    ports:
      - "3000:3000"
    depends_on:
      - backend

  backend:
    build: .
    container_name: app
    env_file:
      - ./.env
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - 8000:8000
    depends_on:
      - db


  business-logic:
    image: ${DOCKER_REGISTRY}/business-logic:latest
    ports:
      - "5000:5000"

  db:
    container_name: postgres_db
    image: postgres:14.8-alpine3.18
    env_file:
      - ./.env
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_ROOT_USERNAME}
      POSTGRES_PASSWORD: ${DB_ROOT_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_ROOT_USERNAME} -d ${DB_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:7.2
    env_file:
      - ./.env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${DB_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${DB_ROOT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    depends_on:
        - postgres

volumes:
  pg_data: